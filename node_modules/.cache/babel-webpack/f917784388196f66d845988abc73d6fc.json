{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/schema/dom_element_schema_registry\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler/src/core\", \"@angular/compiler/src/ml_parser/tags\", \"@angular/compiler/src/util\", \"@angular/compiler/src/schema/dom_security_schema\", \"@angular/compiler/src/schema/element_schema_registry\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DomElementSchemaRegistry = void 0;\n\n  var tslib_1 = require(\"tslib\");\n\n  var core_1 = require(\"@angular/compiler/src/core\");\n\n  var tags_1 = require(\"@angular/compiler/src/ml_parser/tags\");\n\n  var util_1 = require(\"@angular/compiler/src/util\");\n\n  var dom_security_schema_1 = require(\"@angular/compiler/src/schema/dom_security_schema\");\n\n  var element_schema_registry_1 = require(\"@angular/compiler/src/schema/element_schema_registry\");\n\n  var BOOLEAN = 'boolean';\n  var NUMBER = 'number';\n  var STRING = 'string';\n  var OBJECT = 'object';\n  /**\n   * This array represents the DOM schema. It encodes inheritance, properties, and events.\n   *\n   * ## Overview\n   *\n   * Each line represents one kind of element. The `element_inheritance` and properties are joined\n   * using `element_inheritance|properties` syntax.\n   *\n   * ## Element Inheritance\n   *\n   * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n   * Here the individual elements are separated by `,` (commas). Every element in the list\n   * has identical properties.\n   *\n   * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n   * specified then `\"\"` (blank) element is assumed.\n   *\n   * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n   * elements.\n   *\n   * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n   *\n   * ## Properties\n   *\n   * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n   * by a special character designating its type:\n   *\n   * - (no prefix): property is a string.\n   * - `*`: property represents an event.\n   * - `!`: property is a boolean.\n   * - `#`: property is a number.\n   * - `%`: property is an object.\n   *\n   * ## Query\n   *\n   * The class creates an internal squas representation which allows to easily answer the query of\n   * if a given property exist on a given element.\n   *\n   * NOTE: We don't yet support querying for types or events.\n   * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n   *       see dom_element_schema_registry_spec.ts\n   */\n  // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n  //\n  // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n  // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n  //\n  // =================================================================================================\n\n  var SCHEMA = ['[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n  /* added manually to avoid breaking changes */\n  ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored', '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate', 'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate', 'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume', ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex', ':svg:graphics^:svg:|', ':svg:animation^:svg:|*begin,*end,*repeat', ':svg:geometry^:svg:|', ':svg:componentTransferFunction^:svg:|', ':svg:gradient^:svg:|', ':svg:textContent^:svg:graphics|', ':svg:textPositioning^:svg:textContent|', 'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username', 'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username', 'audio^media|', 'br^[HTMLElement]|clear', 'base^[HTMLElement]|href,target', 'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink', 'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value', 'canvas^[HTMLElement]|#height,#width', 'content^[HTMLElement]|select', 'dl^[HTMLElement]|!compact', 'datalist^[HTMLElement]|', 'details^[HTMLElement]|!open', 'dialog^[HTMLElement]|!open,returnValue', 'dir^[HTMLElement]|!compact', 'div^[HTMLElement]|align', 'embed^[HTMLElement]|align,height,name,src,type,width', 'fieldset^[HTMLElement]|!disabled,name', 'font^[HTMLElement]|color,face,size', 'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target', 'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src', 'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows', 'hr^[HTMLElement]|align,color,!noShade,size,width', 'head^[HTMLElement]|', 'h1,h2,h3,h4,h5,h6^[HTMLElement]|align', 'html^[HTMLElement]|version', 'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width', 'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width', 'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width', 'li^[HTMLElement]|type,#value', 'label^[HTMLElement]|htmlFor', 'legend^[HTMLElement]|align', 'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type', 'map^[HTMLElement]|name', 'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width', 'menu^[HTMLElement]|!compact', 'meta^[HTMLElement]|content,httpEquiv,name,scheme', 'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value', 'ins,del^[HTMLElement]|cite,dateTime', 'ol^[HTMLElement]|!compact,!reversed,#start,type', 'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width', 'optgroup^[HTMLElement]|!disabled,label', 'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value', 'output^[HTMLElement]|defaultValue,%htmlFor,name,value', 'p^[HTMLElement]|align', 'param^[HTMLElement]|name,type,value,valueType', 'picture^[HTMLElement]|', 'pre^[HTMLElement]|#width', 'progress^[HTMLElement]|#max,#value', 'q,blockquote,cite^[HTMLElement]|', 'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type', 'select^[HTMLElement]|autocomplete,!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value', 'shadow^[HTMLElement]|', 'slot^[HTMLElement]|name', 'source^[HTMLElement]|media,sizes,src,srcset,type', 'span^[HTMLElement]|', 'style^[HTMLElement]|!disabled,media,type', 'caption^[HTMLElement]|align', 'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width', 'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width', 'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width', 'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign', 'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign', 'template^[HTMLElement]|', 'textarea^[HTMLElement]|autocapitalize,autocomplete,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap', 'title^[HTMLElement]|text', 'track^[HTMLElement]|!default,kind,label,src,srclang', 'ul^[HTMLElement]|!compact,type', 'unknown^[HTMLElement]|', 'video^media|#height,poster,#width', ':svg:a^:svg:graphics|', ':svg:animate^:svg:animation|', ':svg:animateMotion^:svg:animation|', ':svg:animateTransform^:svg:animation|', ':svg:circle^:svg:geometry|', ':svg:clipPath^:svg:graphics|', ':svg:defs^:svg:graphics|', ':svg:desc^:svg:|', ':svg:discard^:svg:|', ':svg:ellipse^:svg:geometry|', ':svg:feBlend^:svg:|', ':svg:feColorMatrix^:svg:|', ':svg:feComponentTransfer^:svg:|', ':svg:feComposite^:svg:|', ':svg:feConvolveMatrix^:svg:|', ':svg:feDiffuseLighting^:svg:|', ':svg:feDisplacementMap^:svg:|', ':svg:feDistantLight^:svg:|', ':svg:feDropShadow^:svg:|', ':svg:feFlood^:svg:|', ':svg:feFuncA^:svg:componentTransferFunction|', ':svg:feFuncB^:svg:componentTransferFunction|', ':svg:feFuncG^:svg:componentTransferFunction|', ':svg:feFuncR^:svg:componentTransferFunction|', ':svg:feGaussianBlur^:svg:|', ':svg:feImage^:svg:|', ':svg:feMerge^:svg:|', ':svg:feMergeNode^:svg:|', ':svg:feMorphology^:svg:|', ':svg:feOffset^:svg:|', ':svg:fePointLight^:svg:|', ':svg:feSpecularLighting^:svg:|', ':svg:feSpotLight^:svg:|', ':svg:feTile^:svg:|', ':svg:feTurbulence^:svg:|', ':svg:filter^:svg:|', ':svg:foreignObject^:svg:graphics|', ':svg:g^:svg:graphics|', ':svg:image^:svg:graphics|', ':svg:line^:svg:geometry|', ':svg:linearGradient^:svg:gradient|', ':svg:mpath^:svg:|', ':svg:marker^:svg:|', ':svg:mask^:svg:|', ':svg:metadata^:svg:|', ':svg:path^:svg:geometry|', ':svg:pattern^:svg:|', ':svg:polygon^:svg:geometry|', ':svg:polyline^:svg:geometry|', ':svg:radialGradient^:svg:gradient|', ':svg:rect^:svg:geometry|', ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan', ':svg:script^:svg:|type', ':svg:set^:svg:animation|', ':svg:stop^:svg:|', ':svg:style^:svg:|!disabled,media,title,type', ':svg:switch^:svg:graphics|', ':svg:symbol^:svg:|', ':svg:tspan^:svg:textPositioning|', ':svg:text^:svg:textPositioning|', ':svg:textPath^:svg:textContent|', ':svg:title^:svg:|', ':svg:use^:svg:graphics|', ':svg:view^:svg:|#zoomAndPan', 'data^[HTMLElement]|value', 'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name', 'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default', 'summary^[HTMLElement]|', 'time^[HTMLElement]|dateTime', ':svg:cursor^:svg:|'];\n  var _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex'\n  }; // Invert _ATTR_TO_PROP.\n\n  var _PROP_TO_ATTR = Object.keys(_ATTR_TO_PROP).reduce(function (inverted, attr) {\n    inverted[_ATTR_TO_PROP[attr]] = attr;\n    return inverted;\n  }, {});\n\n  var DomElementSchemaRegistry =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(DomElementSchemaRegistry, _super);\n\n    function DomElementSchemaRegistry() {\n      var _this = _super.call(this) || this;\n\n      _this._schema = {};\n      SCHEMA.forEach(function (encodedType) {\n        var type = {};\n\n        var _a = tslib_1.__read(encodedType.split('|'), 2),\n            strType = _a[0],\n            strProperties = _a[1];\n\n        var properties = strProperties.split(',');\n\n        var _b = tslib_1.__read(strType.split('^'), 2),\n            typeNames = _b[0],\n            superName = _b[1];\n\n        typeNames.split(',').forEach(function (tag) {\n          return _this._schema[tag.toLowerCase()] = type;\n        });\n\n        var superType = superName && _this._schema[superName.toLowerCase()];\n\n        if (superType) {\n          Object.keys(superType).forEach(function (prop) {\n            type[prop] = superType[prop];\n          });\n        }\n\n        properties.forEach(function (property) {\n          if (property.length > 0) {\n            switch (property[0]) {\n              case '*':\n                // We don't yet support events.\n                // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                // will\n                // almost certainly introduce bad XSS vulnerabilities.\n                // type[property.substring(1)] = EVENT;\n                break;\n\n              case '!':\n                type[property.substring(1)] = BOOLEAN;\n                break;\n\n              case '#':\n                type[property.substring(1)] = NUMBER;\n                break;\n\n              case '%':\n                type[property.substring(1)] = OBJECT;\n                break;\n\n              default:\n                type[property] = STRING;\n            }\n          }\n        });\n      });\n      return _this;\n    }\n\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n      if (schemaMetas.some(function (schema) {\n        return schema.name === core_1.NO_ERRORS_SCHEMA.name;\n      })) {\n        return true;\n      }\n\n      if (tagName.indexOf('-') > -1) {\n        if (tags_1.isNgContainer(tagName) || tags_1.isNgContent(tagName)) {\n          return false;\n        }\n\n        if (schemaMetas.some(function (schema) {\n          return schema.name === core_1.CUSTOM_ELEMENTS_SCHEMA.name;\n        })) {\n          // Can't tell now as we don't know which properties a custom element will get\n          // once it is instantiated\n          return true;\n        }\n      }\n\n      var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n\n      return !!elementProperties[propName];\n    };\n\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n      if (schemaMetas.some(function (schema) {\n        return schema.name === core_1.NO_ERRORS_SCHEMA.name;\n      })) {\n        return true;\n      }\n\n      if (tagName.indexOf('-') > -1) {\n        if (tags_1.isNgContainer(tagName) || tags_1.isNgContent(tagName)) {\n          return true;\n        }\n\n        if (schemaMetas.some(function (schema) {\n          return schema.name === core_1.CUSTOM_ELEMENTS_SCHEMA.name;\n        })) {\n          // Allow any custom elements\n          return true;\n        }\n      }\n\n      return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is based on a list of allowed tags|attributes. All attributes in the schema\n     * above are assumed to have the 'NONE' security context, i.e. that they are safe inert\n     * string values. Only specific well known attack vectors are assigned their appropriate context.\n     */\n\n\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n      if (isAttribute) {\n        // NB: For security purposes, use the mapped property name, not the attribute name.\n        propName = this.getMappedPropName(propName);\n      } // Make sure comparisons are case insensitive, so that case differences between attribute and\n      // property names do not have a security impact.\n\n\n      tagName = tagName.toLowerCase();\n      propName = propName.toLowerCase();\n      var ctx = dom_security_schema_1.SECURITY_SCHEMA()[tagName + '|' + propName];\n\n      if (ctx) {\n        return ctx;\n      }\n\n      ctx = dom_security_schema_1.SECURITY_SCHEMA()['*|' + propName];\n      return ctx ? ctx : core_1.SecurityContext.NONE;\n    };\n\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) {\n      return _ATTR_TO_PROP[propName] || propName;\n    };\n\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () {\n      return 'ng-component';\n    };\n\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n      if (name.toLowerCase().startsWith('on')) {\n        var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" + (\"please use (\" + name.slice(2) + \")=...\") + (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") + \" current module.\";\n        return {\n          error: true,\n          msg: msg\n        };\n      } else {\n        return {\n          error: false\n        };\n      }\n    };\n\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n      if (name.toLowerCase().startsWith('on')) {\n        var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" + (\"please use (\" + name.slice(2) + \")=...\");\n        return {\n          error: true,\n          msg: msg\n        };\n      } else {\n        return {\n          error: false\n        };\n      }\n    };\n\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () {\n      return Object.keys(this._schema);\n    };\n\n    DomElementSchemaRegistry.prototype.allKnownAttributesOfElement = function (tagName) {\n      var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown']; // Convert properties to attributes.\n\n\n      return Object.keys(elementProperties).map(function (prop) {\n        var _a;\n\n        return (_a = _PROP_TO_ATTR[prop]) !== null && _a !== void 0 ? _a : prop;\n      });\n    };\n\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n      return util_1.dashCaseToCamelCase(propName);\n    };\n\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n      var unit = '';\n      var strVal = val.toString().trim();\n      var errorMsg = null;\n\n      if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n        if (typeof val === 'number') {\n          unit = 'px';\n        } else {\n          var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n\n          if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n            errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n          }\n        }\n      }\n\n      return {\n        error: errorMsg,\n        value: strVal + unit\n      };\n    };\n\n    return DomElementSchemaRegistry;\n  }(element_schema_registry_1.ElementSchemaRegistry);\n\n  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n\n  function _isPixelDimensionStyle(prop) {\n    switch (prop) {\n      case 'width':\n      case 'height':\n      case 'minWidth':\n      case 'minHeight':\n      case 'maxWidth':\n      case 'maxHeight':\n      case 'left':\n      case 'top':\n      case 'bottom':\n      case 'right':\n      case 'fontSize':\n      case 'outlineWidth':\n      case 'outlineOffset':\n      case 'paddingTop':\n      case 'paddingLeft':\n      case 'paddingBottom':\n      case 'paddingRight':\n      case 'marginTop':\n      case 'marginLeft':\n      case 'marginBottom':\n      case 'marginRight':\n      case 'borderRadius':\n      case 'borderWidth':\n      case 'borderTopWidth':\n      case 'borderLeftWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'textIndent':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n}); //# sourceMappingURL=data:application/json;base64,","map":{"version":3,"sources":["D:/Animal/Awesome-Animals/node_modules/@angular/compiler/src/schema/dom_element_schema_registry.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","DomElementSchemaRegistry","tslib_1","core_1","tags_1","util_1","dom_security_schema_1","element_schema_registry_1","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","_PROP_TO_ATTR","keys","reduce","inverted","attr","_super","__extends","_this","call","_schema","forEach","encodedType","type","_a","__read","split","strType","strProperties","properties","_b","typeNames","superName","tag","toLowerCase","superType","prop","property","length","substring","prototype","hasProperty","tagName","propName","schemaMetas","some","schema","name","NO_ERRORS_SCHEMA","indexOf","isNgContainer","isNgContent","CUSTOM_ELEMENTS_SCHEMA","elementProperties","hasElement","securityContext","isAttribute","getMappedPropName","ctx","SECURITY_SCHEMA","SecurityContext","NONE","getDefaultComponentElementName","validateProperty","startsWith","msg","slice","error","validateAttribute","allKnownElementNames","allKnownAttributesOfElement","map","normalizeAnimationStyleProperty","dashCaseToCamelCase","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","val","unit","strVal","toString","trim","errorMsg","_isPixelDimensionStyle","valAndSuffixMatch","match","ElementSchemaRegistry"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define(\"@angular/compiler/src/schema/dom_element_schema_registry\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler/src/core\", \"@angular/compiler/src/ml_parser/tags\", \"@angular/compiler/src/util\", \"@angular/compiler/src/schema/dom_security_schema\", \"@angular/compiler/src/schema/element_schema_registry\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.DomElementSchemaRegistry = void 0;\n    var tslib_1 = require(\"tslib\");\n    var core_1 = require(\"@angular/compiler/src/core\");\n    var tags_1 = require(\"@angular/compiler/src/ml_parser/tags\");\n    var util_1 = require(\"@angular/compiler/src/util\");\n    var dom_security_schema_1 = require(\"@angular/compiler/src/schema/dom_security_schema\");\n    var element_schema_registry_1 = require(\"@angular/compiler/src/schema/element_schema_registry\");\n    var BOOLEAN = 'boolean';\n    var NUMBER = 'number';\n    var STRING = 'string';\n    var OBJECT = 'object';\n    /**\n     * This array represents the DOM schema. It encodes inheritance, properties, and events.\n     *\n     * ## Overview\n     *\n     * Each line represents one kind of element. The `element_inheritance` and properties are joined\n     * using `element_inheritance|properties` syntax.\n     *\n     * ## Element Inheritance\n     *\n     * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n     * Here the individual elements are separated by `,` (commas). Every element in the list\n     * has identical properties.\n     *\n     * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n     * specified then `\"\"` (blank) element is assumed.\n     *\n     * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n     * elements.\n     *\n     * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n     *\n     * ## Properties\n     *\n     * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n     * by a special character designating its type:\n     *\n     * - (no prefix): property is a string.\n     * - `*`: property represents an event.\n     * - `!`: property is a boolean.\n     * - `#`: property is a number.\n     * - `%`: property is an object.\n     *\n     * ## Query\n     *\n     * The class creates an internal squas representation which allows to easily answer the query of\n     * if a given property exist on a given element.\n     *\n     * NOTE: We don't yet support querying for types or events.\n     * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n     *       see dom_element_schema_registry_spec.ts\n     */\n    // =================================================================================================\n    // =================================================================================================\n    // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n    // =================================================================================================\n    // =================================================================================================\n    //\n    //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n    //\n    // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n    // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n    //\n    // =================================================================================================\n    var SCHEMA = [\n        '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n            /* added manually to avoid breaking changes */\n            ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n        '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n        'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n        'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n        ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n        ':svg:graphics^:svg:|',\n        ':svg:animation^:svg:|*begin,*end,*repeat',\n        ':svg:geometry^:svg:|',\n        ':svg:componentTransferFunction^:svg:|',\n        ':svg:gradient^:svg:|',\n        ':svg:textContent^:svg:graphics|',\n        ':svg:textPositioning^:svg:textContent|',\n        'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n        'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n        'audio^media|',\n        'br^[HTMLElement]|clear',\n        'base^[HTMLElement]|href,target',\n        'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n        'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n        'canvas^[HTMLElement]|#height,#width',\n        'content^[HTMLElement]|select',\n        'dl^[HTMLElement]|!compact',\n        'datalist^[HTMLElement]|',\n        'details^[HTMLElement]|!open',\n        'dialog^[HTMLElement]|!open,returnValue',\n        'dir^[HTMLElement]|!compact',\n        'div^[HTMLElement]|align',\n        'embed^[HTMLElement]|align,height,name,src,type,width',\n        'fieldset^[HTMLElement]|!disabled,name',\n        'font^[HTMLElement]|color,face,size',\n        'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n        'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n        'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n        'hr^[HTMLElement]|align,color,!noShade,size,width',\n        'head^[HTMLElement]|',\n        'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n        'html^[HTMLElement]|version',\n        'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n        'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n        'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n        'li^[HTMLElement]|type,#value',\n        'label^[HTMLElement]|htmlFor',\n        'legend^[HTMLElement]|align',\n        'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n        'map^[HTMLElement]|name',\n        'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n        'menu^[HTMLElement]|!compact',\n        'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n        'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n        'ins,del^[HTMLElement]|cite,dateTime',\n        'ol^[HTMLElement]|!compact,!reversed,#start,type',\n        'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n        'optgroup^[HTMLElement]|!disabled,label',\n        'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n        'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n        'p^[HTMLElement]|align',\n        'param^[HTMLElement]|name,type,value,valueType',\n        'picture^[HTMLElement]|',\n        'pre^[HTMLElement]|#width',\n        'progress^[HTMLElement]|#max,#value',\n        'q,blockquote,cite^[HTMLElement]|',\n        'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n        'select^[HTMLElement]|autocomplete,!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n        'shadow^[HTMLElement]|',\n        'slot^[HTMLElement]|name',\n        'source^[HTMLElement]|media,sizes,src,srcset,type',\n        'span^[HTMLElement]|',\n        'style^[HTMLElement]|!disabled,media,type',\n        'caption^[HTMLElement]|align',\n        'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n        'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n        'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n        'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n        'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n        'template^[HTMLElement]|',\n        'textarea^[HTMLElement]|autocapitalize,autocomplete,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n        'title^[HTMLElement]|text',\n        'track^[HTMLElement]|!default,kind,label,src,srclang',\n        'ul^[HTMLElement]|!compact,type',\n        'unknown^[HTMLElement]|',\n        'video^media|#height,poster,#width',\n        ':svg:a^:svg:graphics|',\n        ':svg:animate^:svg:animation|',\n        ':svg:animateMotion^:svg:animation|',\n        ':svg:animateTransform^:svg:animation|',\n        ':svg:circle^:svg:geometry|',\n        ':svg:clipPath^:svg:graphics|',\n        ':svg:defs^:svg:graphics|',\n        ':svg:desc^:svg:|',\n        ':svg:discard^:svg:|',\n        ':svg:ellipse^:svg:geometry|',\n        ':svg:feBlend^:svg:|',\n        ':svg:feColorMatrix^:svg:|',\n        ':svg:feComponentTransfer^:svg:|',\n        ':svg:feComposite^:svg:|',\n        ':svg:feConvolveMatrix^:svg:|',\n        ':svg:feDiffuseLighting^:svg:|',\n        ':svg:feDisplacementMap^:svg:|',\n        ':svg:feDistantLight^:svg:|',\n        ':svg:feDropShadow^:svg:|',\n        ':svg:feFlood^:svg:|',\n        ':svg:feFuncA^:svg:componentTransferFunction|',\n        ':svg:feFuncB^:svg:componentTransferFunction|',\n        ':svg:feFuncG^:svg:componentTransferFunction|',\n        ':svg:feFuncR^:svg:componentTransferFunction|',\n        ':svg:feGaussianBlur^:svg:|',\n        ':svg:feImage^:svg:|',\n        ':svg:feMerge^:svg:|',\n        ':svg:feMergeNode^:svg:|',\n        ':svg:feMorphology^:svg:|',\n        ':svg:feOffset^:svg:|',\n        ':svg:fePointLight^:svg:|',\n        ':svg:feSpecularLighting^:svg:|',\n        ':svg:feSpotLight^:svg:|',\n        ':svg:feTile^:svg:|',\n        ':svg:feTurbulence^:svg:|',\n        ':svg:filter^:svg:|',\n        ':svg:foreignObject^:svg:graphics|',\n        ':svg:g^:svg:graphics|',\n        ':svg:image^:svg:graphics|',\n        ':svg:line^:svg:geometry|',\n        ':svg:linearGradient^:svg:gradient|',\n        ':svg:mpath^:svg:|',\n        ':svg:marker^:svg:|',\n        ':svg:mask^:svg:|',\n        ':svg:metadata^:svg:|',\n        ':svg:path^:svg:geometry|',\n        ':svg:pattern^:svg:|',\n        ':svg:polygon^:svg:geometry|',\n        ':svg:polyline^:svg:geometry|',\n        ':svg:radialGradient^:svg:gradient|',\n        ':svg:rect^:svg:geometry|',\n        ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n        ':svg:script^:svg:|type',\n        ':svg:set^:svg:animation|',\n        ':svg:stop^:svg:|',\n        ':svg:style^:svg:|!disabled,media,title,type',\n        ':svg:switch^:svg:graphics|',\n        ':svg:symbol^:svg:|',\n        ':svg:tspan^:svg:textPositioning|',\n        ':svg:text^:svg:textPositioning|',\n        ':svg:textPath^:svg:textContent|',\n        ':svg:title^:svg:|',\n        ':svg:use^:svg:graphics|',\n        ':svg:view^:svg:|#zoomAndPan',\n        'data^[HTMLElement]|value',\n        'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n        'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n        'summary^[HTMLElement]|',\n        'time^[HTMLElement]|dateTime',\n        ':svg:cursor^:svg:|',\n    ];\n    var _ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    // Invert _ATTR_TO_PROP.\n    var _PROP_TO_ATTR = Object.keys(_ATTR_TO_PROP).reduce(function (inverted, attr) {\n        inverted[_ATTR_TO_PROP[attr]] = attr;\n        return inverted;\n    }, {});\n    var DomElementSchemaRegistry = /** @class */ (function (_super) {\n        tslib_1.__extends(DomElementSchemaRegistry, _super);\n        function DomElementSchemaRegistry() {\n            var _this = _super.call(this) || this;\n            _this._schema = {};\n            SCHEMA.forEach(function (encodedType) {\n                var type = {};\n                var _a = tslib_1.__read(encodedType.split('|'), 2), strType = _a[0], strProperties = _a[1];\n                var properties = strProperties.split(',');\n                var _b = tslib_1.__read(strType.split('^'), 2), typeNames = _b[0], superName = _b[1];\n                typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n                var superType = superName && _this._schema[superName.toLowerCase()];\n                if (superType) {\n                    Object.keys(superType).forEach(function (prop) {\n                        type[prop] = superType[prop];\n                    });\n                }\n                properties.forEach(function (property) {\n                    if (property.length > 0) {\n                        switch (property[0]) {\n                            case '*':\n                                // We don't yet support events.\n                                // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                                // will\n                                // almost certainly introduce bad XSS vulnerabilities.\n                                // type[property.substring(1)] = EVENT;\n                                break;\n                            case '!':\n                                type[property.substring(1)] = BOOLEAN;\n                                break;\n                            case '#':\n                                type[property.substring(1)] = NUMBER;\n                                break;\n                            case '%':\n                                type[property.substring(1)] = OBJECT;\n                                break;\n                            default:\n                                type[property] = STRING;\n                        }\n                    }\n                });\n            });\n            return _this;\n        }\n        DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n            if (schemaMetas.some(function (schema) { return schema.name === core_1.NO_ERRORS_SCHEMA.name; })) {\n                return true;\n            }\n            if (tagName.indexOf('-') > -1) {\n                if (tags_1.isNgContainer(tagName) || tags_1.isNgContent(tagName)) {\n                    return false;\n                }\n                if (schemaMetas.some(function (schema) { return schema.name === core_1.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                    // Can't tell now as we don't know which properties a custom element will get\n                    // once it is instantiated\n                    return true;\n                }\n            }\n            var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n            return !!elementProperties[propName];\n        };\n        DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n            if (schemaMetas.some(function (schema) { return schema.name === core_1.NO_ERRORS_SCHEMA.name; })) {\n                return true;\n            }\n            if (tagName.indexOf('-') > -1) {\n                if (tags_1.isNgContainer(tagName) || tags_1.isNgContent(tagName)) {\n                    return true;\n                }\n                if (schemaMetas.some(function (schema) { return schema.name === core_1.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                    // Allow any custom elements\n                    return true;\n                }\n            }\n            return !!this._schema[tagName.toLowerCase()];\n        };\n        /**\n         * securityContext returns the security context for the given property on the given DOM tag.\n         *\n         * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n         * possible to bind a value into a changing attribute or tag name.\n         *\n         * The filtering is based on a list of allowed tags|attributes. All attributes in the schema\n         * above are assumed to have the 'NONE' security context, i.e. that they are safe inert\n         * string values. Only specific well known attack vectors are assigned their appropriate context.\n         */\n        DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n            if (isAttribute) {\n                // NB: For security purposes, use the mapped property name, not the attribute name.\n                propName = this.getMappedPropName(propName);\n            }\n            // Make sure comparisons are case insensitive, so that case differences between attribute and\n            // property names do not have a security impact.\n            tagName = tagName.toLowerCase();\n            propName = propName.toLowerCase();\n            var ctx = dom_security_schema_1.SECURITY_SCHEMA()[tagName + '|' + propName];\n            if (ctx) {\n                return ctx;\n            }\n            ctx = dom_security_schema_1.SECURITY_SCHEMA()['*|' + propName];\n            return ctx ? ctx : core_1.SecurityContext.NONE;\n        };\n        DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) {\n            return _ATTR_TO_PROP[propName] || propName;\n        };\n        DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () {\n            return 'ng-component';\n        };\n        DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n            if (name.toLowerCase().startsWith('on')) {\n                var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                    (\"please use (\" + name.slice(2) + \")=...\") +\n                    (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                    \" current module.\";\n                return { error: true, msg: msg };\n            }\n            else {\n                return { error: false };\n            }\n        };\n        DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n            if (name.toLowerCase().startsWith('on')) {\n                var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                    (\"please use (\" + name.slice(2) + \")=...\");\n                return { error: true, msg: msg };\n            }\n            else {\n                return { error: false };\n            }\n        };\n        DomElementSchemaRegistry.prototype.allKnownElementNames = function () {\n            return Object.keys(this._schema);\n        };\n        DomElementSchemaRegistry.prototype.allKnownAttributesOfElement = function (tagName) {\n            var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n            // Convert properties to attributes.\n            return Object.keys(elementProperties).map(function (prop) { var _a; return (_a = _PROP_TO_ATTR[prop]) !== null && _a !== void 0 ? _a : prop; });\n        };\n        DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n            return util_1.dashCaseToCamelCase(propName);\n        };\n        DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n            var unit = '';\n            var strVal = val.toString().trim();\n            var errorMsg = null;\n            if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n                if (typeof val === 'number') {\n                    unit = 'px';\n                }\n                else {\n                    var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                    if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                        errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                    }\n                }\n            }\n            return { error: errorMsg, value: strVal + unit };\n        };\n        return DomElementSchemaRegistry;\n    }(element_schema_registry_1.ElementSchemaRegistry));\n    exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n    function _isPixelDimensionStyle(prop) {\n        switch (prop) {\n            case 'width':\n            case 'height':\n            case 'minWidth':\n            case 'minHeight':\n            case 'maxWidth':\n            case 'maxHeight':\n            case 'left':\n            case 'top':\n            case 'bottom':\n            case 'right':\n            case 'fontSize':\n            case 'outlineWidth':\n            case 'outlineOffset':\n            case 'paddingTop':\n            case 'paddingLeft':\n            case 'paddingBottom':\n            case 'paddingRight':\n            case 'marginTop':\n            case 'marginLeft':\n            case 'marginBottom':\n            case 'marginRight':\n            case 'borderRadius':\n            case 'borderWidth':\n            case 'borderTopWidth':\n            case 'borderLeftWidth':\n            case 'borderRightWidth':\n            case 'borderBottomWidth':\n            case 'textIndent':\n                return true;\n            default:\n                return false;\n        }\n    }\n});\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}